#include "plugin.hpp"


struct Saturator : Module {
	enum ParamIds {
		INGAIN_PARAM,
		OUTGAIN_PARAM,
		NUM_PARAMS
	};
	enum InputIds {
		PATH17_INPUT,
		NUM_INPUTS
	};
	enum OutputIds {
		PATH19_OUTPUT,
		NUM_OUTPUTS
	};
	enum LightIds {
		NUM_LIGHTS
	};

	float tanhLookup[257] = {-0.9999997932607106, -0.9999997655781617, -0.9999997341888989, -0.9999996985965903, -0.9999996582384455, -0.9999996124763155, -0.9999995605866032, -0.9999995017488211, -0.9999994350326185, -0.9999993593830694, -0.9999992736039937, -0.9999991763390417, -0.9999990660502481, -0.9999989409937139, -0.9999987991920309, -0.9999986384030164, -0.9999984560842586, -0.999998249352917, -0.9999980149401393, -0.9999977491393742, -0.9999974477477647, -0.9999971059996934, -0.99999671849143, -0.9999962790956893, -0.9999957808647498, -0.999995215920599, -0.9999945753303718, -0.9999938489651098, -0.9999930253396107, -0.9999920914308351, -0.9999910324720012, -0.9999898317191096, -0.9999884701862134, -0.9999869263452426, -0.9999851757856447, -0.9999831908284583, -0.9999809400887224, -0.9999783879793085, -0.9999754941483325, -0.9999722128412624, -0.9999684921776413, -0.9999642733310061, -0.999959489599048, -0.9999540653493341, -0.9999479148239473, -0.9999409407841789, -0.9999330329738872, -0.9999240663772829, -0.9999138992436686, -0.9999023708479934, -0.9998892989519369, -0.9998744769255337, -0.9998576704840296, -0.9998386139886326, -0.9998170062530036, -0.9997925057896083, -0.9997647254213227, -0.999733226173803, -0.9996975103529641, -0.9996570136992858, -0.9996110964964081, -0.9995590334953705, -0.9995000024976843, -0.9994330714199305, -0.9993571836394853, -0.9992711413949749, -0.99917358698582, -0.9990629814823704, -0.9989375806212698, -0.9987954075193919, -0.9986342217934997, -0.9984514846212366, -0.9982443192216649, -0.9980094661698429, -0.9977432328894086, -0.9974414365893911, -0.9970993398261455, -0.9967115777781884, -0.99627207622075, -0.9957739590782865, -0.9952094443176224, -0.9945697268229151, -0.9938448467680954, -0.993023541875534, -0.9920930818254032, -0.991039082964038, -0.9898453013591358, -0.988493402175018, -0.9869627033058325, -0.9852298912260578, -0.9832687071185617, -0.9810496015495929, -0.9785393563137075, -0.9757006726149112, -0.9724917255386386, -0.9688656858696789, -0.9647702118035602, -0.9601469150761827, -0.9549308086042282, -0.9490497460029758, -0.9424238674500077, -0.9349650714111251, -0.9265765378398192, -0.9171523356672744, -0.9065771557120564, -0.8947262194457066, -0.8814654240811349, -0.8666517947108041, -0.8501343239219393, -0.8317552872982551, -0.8113521278920903, -0.788760002064728, -0.7638150705607842, -0.7363585995164269, -0.7062419034803165, -0.6733321140484185, -0.6375186920428363, -0.5987205188492946, -0.5568933069002107, -0.5120369672627675, -0.46420247477786125, -0.41349769282645016, -0.3600915776188121, -0.3042161928867445, -0.24616604339791912, -0.1862943855962673, -0.12500639056040364, -0.06274930002740721, 0.0, 0.06274930002740721, 0.12500639056040364, 0.1862943855962673, 0.24616604339791912, 0.3042161928867445, 0.3600915776188121, 0.41349769282645016, 0.46420247477786125, 0.5120369672627675, 0.5568933069002107, 0.5987205188492946, 0.6375186920428363, 0.6733321140484185, 0.7062419034803165, 0.7363585995164269, 0.7638150705607842, 0.788760002064728, 0.8113521278920903, 0.8317552872982551, 0.8501343239219393, 0.8666517947108041, 0.8814654240811349, 0.8947262194457066, 0.9065771557120564, 0.9171523356672744, 0.9265765378398192, 0.9349650714111251, 0.9424238674500077, 0.9490497460029758, 0.9549308086042282, 0.9601469150761827, 0.9647702118035602, 0.9688656858696789, 0.9724917255386386, 0.9757006726149112, 0.9785393563137075, 0.9810496015495929, 0.9832687071185617, 0.9852298912260578, 0.9869627033058325, 0.988493402175018, 0.9898453013591358, 0.991039082964038, 0.9920930818254032, 0.993023541875534, 0.9938448467680954, 0.9945697268229151, 0.9952094443176224, 0.9957739590782865, 0.99627207622075, 0.9967115777781884, 0.9970993398261455, 0.9974414365893911, 0.9977432328894086, 0.9980094661698429, 0.9982443192216649, 0.9984514846212366, 0.9986342217934997, 0.9987954075193919, 0.9989375806212698, 0.9990629814823704, 0.99917358698582, 0.9992711413949749, 0.9993571836394853, 0.9994330714199305, 0.9995000024976843, 0.9995590334953705, 0.9996110964964081, 0.9996570136992858, 0.9996975103529641, 0.999733226173803, 0.9997647254213227, 0.9997925057896083, 0.9998170062530036, 0.9998386139886326, 0.9998576704840296, 0.9998744769255337, 0.9998892989519369, 0.9999023708479934, 0.9999138992436686, 0.9999240663772829, 0.9999330329738872, 0.9999409407841789, 0.9999479148239473, 0.9999540653493341, 0.999959489599048, 0.9999642733310061, 0.9999684921776413, 0.9999722128412624, 0.9999754941483325, 0.9999783879793085, 0.9999809400887224, 0.9999831908284583, 0.9999851757856447, 0.9999869263452426, 0.9999884701862134, 0.9999898317191096, 0.9999910324720012, 0.9999920914308351, 0.9999930253396107, 0.9999938489651098, 0.9999945753303718, 0.999995215920599, 0.9999957808647498, 0.9999962790956893, 0.99999671849143, 0.9999971059996934, 0.9999974477477647, 0.9999977491393742, 0.9999980149401393, 0.999998249352917, 0.9999984560842586, 0.9999986384030164, 0.9999987991920309, 0.9999989409937139, 0.9999990660502481, 0.9999991763390417, 0.9999992736039937, 0.9999993593830694, 0.9999994350326185, 0.9999995017488211, 0.9999995605866032, 0.9999996124763155, 0.9999996582384455, 0.9999996985965903, 0.9999997341888989, 0.9999997655781617, 0.9999997932607106};
	float maxInput=40.0;

	Saturator() {
		config(NUM_PARAMS, NUM_INPUTS, NUM_OUTPUTS, NUM_LIGHTS);
		configParam(INGAIN_PARAM,0.f,1.f,0.f,"IN GAIN","",0,10);
		configParam(OUTGAIN_PARAM,0.f,1.f,0.f,"OUT GAIN","",0,10);

	}

	void process(const ProcessArgs &args) override {
		//get input params
		Input audioinput = inputs[PATH17_INPUT];
		float input = audioinput.getVoltage();
		float inGainParam = params[INGAIN_PARAM].getValue();
		float outGainParam = params[OUTGAIN_PARAM].getValue();

		//set gain things
		float inGain = pow(1.f + inGainParam, 3); 
		float outGain = pow(1.f+outGainParam,3);
		input*=inGain;
		//printf("input: %f   ",input);

		/**
		//LOOKUP TABLE VERSION
		//want abnormal index to go from 0 to 300 for clipping
		
		int abnormalIndex = ceil((input/maxInput)*150+150);
		int tanhindex = clamp(abnormalIndex,0,256);
		float tanhvalue = tanhLookup[tanhindex];
		//printf("GAIN: %f    INPUT: %f   AbINDEX: %i   SAT VALUE: %f \n",inGain,input,abnormalIndex,tanhvalue);
		**/

		
		//TANH FUNCTION
		float inputPiRange = (input/maxInput)*M_PI;
		float tanhvalue = tanh(inputPiRange);
		//printf("pi range input: %f\n",inputPiRange);
	


		//int channels = audioinput.getChannels();
		//float in[16] = {};
		//audioinput.readVoltages(in);
		/**
		simd::float_4 v[4];
		for (int c = 0; c < channels; c += 4) {
			v[c / 4] = simd::float_4::load(in.getVoltages(c));
		}**/


		Output &out = outputs[PATH19_OUTPUT];
		out.setVoltage(outGain*tanhvalue);
		//out.setChannels(channels);
		//out.writeVoltages(in);
		/**
		//LOOKUP TABLE VERSION
		//want abnormal index to go from 0 to 120 for clipping
		
		int abnormalIndex = ceil((input/maxInput)*60+60);
		int tanhindex = clamp(abnormalIndex,0,100);
		for (int c = 0; c < channels; c += 4) {
			v[c / 4].store(out.getVoltages(c));
		}**/

	}
};


struct SaturatorWidget : ModuleWidget {
	SaturatorWidget(Saturator *module) {
		setModule(module);
		setPanel(APP->window->loadSvg(asset::plugin(pluginInstance, "res/Saturator.svg")));

		addChild(createWidget<ScrewSilver>(Vec(RACK_GRID_WIDTH, 0)));
		addChild(createWidget<ScrewSilver>(Vec(box.size.x - 2 * RACK_GRID_WIDTH, 0)));
		addChild(createWidget<ScrewSilver>(Vec(RACK_GRID_WIDTH, RACK_GRID_HEIGHT - RACK_GRID_WIDTH)));
		addChild(createWidget<ScrewSilver>(Vec(box.size.x - 2 * RACK_GRID_WIDTH, RACK_GRID_HEIGHT - RACK_GRID_WIDTH)));

		addInput(createInputCentered<PJ301MPort>(mm2px(Vec(19.874, 26.241)), module, Saturator::PATH17_INPUT));

		addParam(createParamCentered<RoundBlackKnob>(mm2px(Vec(26.727, 62.7)), module, Saturator::INGAIN_PARAM));
		addParam(createParamCentered<RoundBlackKnob>(mm2px(Vec(26.727, 82.7)), module, Saturator::OUTGAIN_PARAM));


		addOutput(createOutputCentered<PJ301MPort>(mm2px(Vec(19.874, 74.617)), module, Saturator::PATH19_OUTPUT));
	}
};


Model *modelSaturator = createModel<Saturator, SaturatorWidget>("Saturator");